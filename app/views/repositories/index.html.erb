<% provide(:head_title, t("libraries.index.head_title")) %>
<% provide(:container_class, "no-second-nav-container") %>

<% if current_team %>
  <% provide(:sidebar_url, sidebar_repositories_path) %>
  <% provide(:sidebar_title, t('sidebar.repositories.sidebar_title')) %>
  <%= content_for :sidebar do %>
   <%= render partial: "sidebar", locals: { repositories: @repositories, archived: params[:archived] } %>
  <% end %>
  <%= render "view_archived_btn" %>
<% end %>

<!-- table template -->
<template id="RepositoriesListTable">
  <table id="repositoriesList" class="table"
         data-source="<%= team_repositories_path(current_team, format: :json) %>">
    <thead>
      <tr>
        <th>
          <div class="sci-checkbox-container">
            <input value="1" type="checkbox" class="sci-checkbox select-all-checkbox" title="repository all row selector checkbox">
            <span class="sci-checkbox-label"></span>
          </div>
        </th>
        <th onclick="setTitle(this)" title="inventory column: name"><%= t('libraries.index.table.name') %></th>
        <th onclick="setTitle(this)" title="inventory column: no. of items"><%= t('libraries.index.table.number_of_items') %></th>
        <th onclick="setTitle(this)" title="inventory column: shared"><%= t('libraries.index.table.shared') %></th>
        <th onclick="setTitle(this)" title="inventory column: ownership"><%= t('libraries.index.table.ownership') %></th>
        <th onclick="setTitle(this)" title="inventory column: added on"><%= t('libraries.index.table.added_on') %></th>
        <th onclick="setTitle(this)" title="inventory column: added by"><%= t('libraries.index.table.added_by') %></th>
        <th onclick="setTitle(this)" title="inventory column: archived on"><%= t('libraries.index.table.archived_on') %></th>
        <th onclick="setTitle(this)" title="inventory column: archived by"><%= t('libraries.index.table.archived_by') %></th>
      </tr>
    </thead>
  </table>
</template>

<!-- Repositories action buttons -->
<template id="repositoriesListButtons">
<% if can_create_repositories?(current_team) %>
  <a id="createRepoBtn" class="btn btn-primary"
    data-remote="true"
    data-view-mode="active"
    href="<%= create_modal_team_repositories_path(current_team) %>">
    <span class="fas fa-plus"></span>
    <span class="hidden-xs" title="create new repository"><%= t('libraries.index.no_libraries.create_new_button') %></span>
  </a>
<% end %>
  <a title="rename selected repository" id="renameRepoBtn" class="btn btn-light disabled hidden" data-view-mode="active" href="#" data-action-mode="single" data-remote="true">
    <span class="fas fa-pencil-alt"></span>
    <%= t('libraries.index.buttons.edit') %>
  </a>
  <% if can_create_repositories?(current_team) %>
    <a title="copy selected repository" id="copyRepoBtn" class="btn btn-light disabled hidden" data-view-mode="active" href="#" data-action-mode="single" data-remote="true">
      <span class="fas fa-copy"></span>
      <%= t('libraries.index.buttons.duplicate') %>
    </a>
  <% end %>
  <a id="archiveRepoBtn"
     title="archive selected repository"
     class="btn btn-light disabled hidden"
     data-view-mode="active"
     data-action-mode="multiple"
     data-archive-repositories="<%= archive_team_repositories_path(current_team) %>">
    <span class="fas fa-archive"></span>
    <%= t('libraries.index.buttons.archive') %>
  </a>
  <a id="restoreRepoBtn"
     title="restore selected repository"
     class="btn btn-light disabled hidden"
     data-view-mode="archived"
     data-action-mode="multiple"
     data-restore-repositories="<%= restore_team_repositories_path(current_team) %>">
    <span class="fas fa-undo"></span>
    <%= t('libraries.index.buttons.restore') %>
  </a>
  <a title="delete selected repository" id="deleteRepoBtn" class="btn btn-light disabled hidden" data-view-mode="archived" href="#" data-action-mode="single" data-remote="true">
    <span class="fas fa-trash"></span>
    <%= t('libraries.index.buttons.delete') %>
  </a>
</template>

<%= javascript_include_tag "repositories/index" %>
<%= stylesheet_link_tag 'datatables' %>


<script>
  function setTitle(element) {
    if (element.title.includes(" sorted"))
      element.title = element.title.replace(" sorted", "")
    else
      element.title = element.title.concat(" sorted")
  }

  document.addEventListener("click", function(event) {
      if (event.target.matches("input[type='checkbox']")) {
        var checkedRows = checkedRows = document.querySelectorAll("tr td input[type='checkbox']:checked");
        var checkedNames = []
        for (var i = 0; i < checkedRows.length; i++) {
          checkedNames.push(checkedRows[i].parentElement.parentElement.parentElement.getElementsByClassName('record-info-link')[0].innerText);
        }
        $('#exportRepositoriesButton').find('.button-text').prop('title', `Export these items: ${checkedNames}`)
        $('#toolbarPrintLabel').find('.button-text').prop('title', `Print label these items: ${checkedNames}`)
        $('#restoreRepositoryRecords').find('.button-text').prop('title', `Restore these items: ${checkedNames}`)
        $('#deleteRepositoryRecords').find('.button-text').prop('title', `Delete these items: ${checkedNames}`)
        $('#archiveRepositoryRecordsButton').find('.button-text').prop('title', `Archive these items: ${checkedNames}`)
        $('#copyRepositoryRecords').find('.button-text').prop('title', `Copy these items: ${checkedNames}`)
        $('#editRepositoryRecord').find('.button-text').prop('title', `Edit item: ${checkedNames}`)
      }
  });

  function checkedTitles() {
    var checkedRows = checkedRows = document.querySelectorAll("tr td input[type='checkbox']:checked");
    var checkedNames = []
    for (var i = 0; i < checkedRows.length; i++) {
      checkedNames.push(checkedRows[i].parentElement.parentElement.parentElement.getElementsByClassName('item-name')[0].innerText);
    }
    $('#renameRepoBtn').prop('title', `Rename ${checkedNames}`)
    $('#copyRepoBtn').prop('title', `Duplicate ${checkedNames}`)
    $('#archiveRepoBtn').prop('title', `Archive ${checkedNames}`)

  }
</script>
